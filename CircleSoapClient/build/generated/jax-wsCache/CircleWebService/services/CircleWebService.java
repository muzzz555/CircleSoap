
package services;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CircleWebService", targetNamespace = "http://Services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CircleWebService {


    /**
     * 
     * @param radius
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calcirclearea", targetNamespace = "http://Services/", className = "services.Calcirclearea")
    @ResponseWrapper(localName = "calcircleareaResponse", targetNamespace = "http://Services/", className = "services.CalcircleareaResponse")
    @Action(input = "http://Services/CircleWebService/calcircleareaRequest", output = "http://Services/CircleWebService/calcircleareaResponse")
    public double calcirclearea(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

    /**
     * 
     * @param radius
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calcircumference", targetNamespace = "http://Services/", className = "services.Calcircumference")
    @ResponseWrapper(localName = "calcircumferenceResponse", targetNamespace = "http://Services/", className = "services.CalcircumferenceResponse")
    @Action(input = "http://Services/CircleWebService/calcircumferenceRequest", output = "http://Services/CircleWebService/calcircumferenceResponse")
    public double calcircumference(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

}
